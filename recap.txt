React는 HTML의 태그 안에 다른 tag를 삽입할 수 있다.
이는 마치 함수의 은닉성과 유사해 보인다.
이런 점으로 인해 속도가 빠르다.
모든 태그를 다 때려박아두지 않고 빈 index를 열기 때문이다.

React는 component 와 같이 동작한다.
모든 것은 component 다.
component가 data를 보여준다.
component는 function 이고 html 태그를 반환한다.

이런 식으로 javascrip 와 html 사이의 조합을 jsx 라고 부른다.

react는 하나의 render에서 하나의 component만 렌더링이 가능하다.
그러므로 component 안에 다른 component를 집어넣는 방식으로 코딩이 가능하다.

component에는 정보를 전달 할 수 있다. 
재사용 가능한 코드를 생산이 가능하단 의미.

이전 강의에서는 component가 함수라고 했다.
그러므로 개념적으로 인자를 설정하고 매개변수를 입력하여 동작시킬 수 있을 것이다.

이 인자를 구분하는 것은 property와 value다.

<component_name property_name="value_name" /> 이것이 기본 골격이다.
property의 이름에 제한은 없으며 value또한 제한이 없다.
부울형, 문자열, 정수형, 배열 모두 다 value로 입력이 가능하다.
추측하건데 추상적인 자료형들도 입력이 가능할 것으로 보인다.

추가 => props.fav = {fav}
props => 여러 property
이런 식으로 여러 property를 보내는 것이 아닌 일정한 하나의 property를 보낼 수가 있다.

우리는 component를 여러번 호출 할 수도 있지만
그것은 그렇게 좋은 방법이 아니다.
함수를 통해서 반복적인 호출을 하는 것이 가장 바람직할 것이다.
코드의 양도 줄어들기 때문이다.

이런 방법중 제일 적절한 방법으로는 map을 사용하는 것이다.
어떠한 자료구조의 map은 각 원소가 각각 하나의 component나 함수를 호출하고,
인자를 주고 그 component 또는 함수의 리턴값을 받을 수 있다.
이것은 리액트의 기능은 아니고 자바스크립트의 기능중 하나이다.

proptypes 라는 기능을 사용할 수 있다.
이 기능은 component의 prop에 값을 전달할 때
내가 전달한 값들이 prop에 매칭되는지 확인 할 수 있는 기능이다.
왜냐하면 내가 실수로 다른 값과 엉뚱한 prop에 매칭할 수도 있기 때문이다.
컴파일러가 오류를 뿜어내듯이 나에게 오류를 알려준다.